#!/bin/bash

# Pembuatan variabel untuk proxy
flproxy=/etc/ipproxy
environmentFile=/etc/environment

red=$(tput setaf 1)
gren=$(tput setaf 2)
yellow=$(tput setaf 3)

# Pewarnaan terminal biar keren
msg() {
  local colors="/etc/new-adm-color"
  if [[ ! -e $colors ]]; then
    # Putih
    COLOR[0]='\033[1;37m' #BRAN='\033[1;37m'
    # Merah
    COLOR[1]='\e[31m'     #VERMELHO='\e[31m'
    # Hijau
    COLOR[2]='\e[32m'     #VERDE='\e[32m'
    # Kuning
    COLOR[3]='\e[33m'     #AMARELO='\e[33m'
    # Biru
    COLOR[4]='\e[34m'     #AZUL='\e[34m'
    # Magenta
    COLOR[5]='\e[35m'     #MAGENTA='\e[35m'
    # Mag
    COLOR[6]='\033[1;36m' #MAG='\033[1;36m'
  else
    local COL=0
    for number in $(cat $colors); do
      case $number in
      1) COLOR[$COL]='\033[1;37m' ;;
      2) COLOR[$COL]='\e[31m' ;;
      3) COLOR[$COL]='\e[32m' ;;
      4) COLOR[$COL]='\e[33m' ;;
      5) COLOR[$COL]='\e[34m' ;;
      6) COLOR[$COL]='\e[35m' ;;
      7) COLOR[$COL]='\033[1;36m' ;;
      esac
      let COL++
    done
  fi
  NEGRITO='\e[1m'
  SEMCOR='\e[0m'
  case $1 in
  -ne) cor="${COLOR[1]}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}" ;;
  -ama) cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -verm) cor="${COLOR[3]}${NEGRITO}[!] ${COLOR[1]}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -verm2) cor="${COLOR[1]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -azu) cor="${COLOR[6]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -verd) cor="${COLOR[2]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -bra) cor="${COLOR[0]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
  -garis) cor="${COLOR[0]}${NEGRITO}" && echo -e "======= ${cor}${2}${SEMCOR} =======" ;;
  "-bar2" | "-bar") cor="${COLOR[4]}======================================================" && echo -e "${SEMCOR}${cor}${SEMCOR}" ;;
  esac
}

isRoot() {
  if [[ "${EUID}" -ne 0 ]]; then
    msg -verm "Kamu harus jalankan script ini mode root"
    msg -verm "Ketik $(msg -bra "sudo proxy") "
    return 1
  else
    return 0
  fi
}

isUrl(){
  regex='^(http?|https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]\.[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]$'

  if [[ $1 =~ $regex ]]; then 
    echo 0
  else
    echo 1
  fi
}

# Tutorial
infoProtokol="PROTOKOL =>
- http / https / ftp / ftps / socks
- PROTOKOL://IP:PORT
- PROTOKOL://USER:PASSWORD@IP:PORT"

infoEditProxy="==> sudo proxy edit FormatIPProxy"

infoProxyOn="==> proxy on
== Menghidupkan proxy otomatis ==
Jika ingin menghidupkan Proxy pada APT
\"sudo proxy off\""

infoProxyOff="==> proxy off
== Untuk mematikan proxy pada apt ==
Jika ingin menonaktifkan Proxy pada APT
\"sudo proxy off\""

infoStatus="==> proxy status"

infoVS="- Buka setting
- Cari = proxy
- Matikan √ pada Http: Proxy Strict SSL
- Pada Http: Proxy Support => override
- Pada Http: Proxy => isi proxy kalian"

infoSetting="- Klik tombol start / windows
- Cari = proxy
- Pilih Gunakan konfigurasi proxy yang ditentukan secara manual
- √ Gunakan server proxy ini untuk semua protokol"

[[ ! -e ${flproxy} ]] && {
  if [[ isRoot -eq 0 ]];then
    msg -bra "1. Format Input IP Proxy"
    msg -ama "PROTOKOL =>"
    msg -ama "  - http / https / ftp / ftps / socks"
    msg -ama "=> PROTOKOL://IP:PORT"
    msg -ama "=> PROTOKOL://USER:PASSWORD@IP:PORT"
    read -rp "$(msg -verd "Masukkan IP Proxy"): " opsi
    echo $opsi>$flproxy &>/dev/null
    touch ${flproxy} &>/dev/null
  fi
}

# Mengisi ip proxy ke variable
var_proxy=$(cat ${flproxy})

if [[ $1 == "off" ]]; then
  msg -bar
  unset http_proxy
  unset https_proxy
  unset HTTP_PROXY
  unset HTTPS_PROXY
  unset NO_PROXY

  msg -garis "√ hapus Environment"

  git config --global --unset http.proxy
  git config --global --unset https.proxy
  msg -garis "√ hapus proxy di GIT"

  npm config rm proxy &>/dev/null
  npm config rm http-proxy &>/dev/null
  npm config rm https-proxy &>/dev/null
  msg -garis "√ hapus proxy di NPM"

  if [[ isRoot -eq 0 ]]; then
    # Setup di file environment All User
    if [[ `grep -c "^#Proxy" $environmentFile` -eq 1 ]]; then
      grep -v "^#Proxy
http_proxy=\"$var_proxy\"
https_proxy=\"$var_proxy\"
ftp_proxy=\"$var_proxy\"
NO_PROXY=\"localhost,127.0.0.1,::1\"" $environmentFile > /tmp/envbackup && mv -f /tmp/envbackup $environmentFile
fi

    sudo rm -rf /etc/apt/apt.conf.d/proxy.conf
    msg -garis "√ hapus proxy di APT"
    msg -bar
  else
    msg -garis "* Setting file environment untuk semua user"
    msg -garis "Jika ingin menghapus proxy pada APT"
    msg -ama "sudo proxy off"
  fi
  # cek status proxy kembali
  proxy status

elif [[ $1 == "on" ]]; then
  msg -bar
  msg -garis "√ Membuat proxy di Environment"
  export http_proxy="$var_proxy"
  export https_proxy="$var_proxy"
  export ftp_proxy="$var_proxy"
  export NO_PROXY=localhost,127.0.0.1,::1

  msg -garis "√ Membuat proxy di GIT"
  git config --global http.proxy $var_proxy
  git config --global https.proxy $var_proxy

  msg -garis "√ Membuat proxy di NPM"
  npm config set proxy $var_proxy &>/dev/null
  npm config set http-proxy $var_proxy &>/dev/null
  npm config set https-proxy $var_proxy &>/dev/null

  if [[ isRoot -eq 0 ]]; then
    # Setup di file environment All User
    if [[ `grep -c "^#Proxy" $environmentFile` -eq 0 ]]; then
      echo "#Proxy" >> $environmentFile
      echo "http_proxy=\"$var_proxy\""  >> $environmentFile
      echo "https_proxy=\"$var_proxy\"" >> $environmentFile
      echo "ftp_proxy=\"$var_proxy\"" >> $environmentFile
      echo "NO_PROXY=\"localhost,127.0.0.1,::1\"" >> $environmentFile
    fi

    msg -garis "√ Membuat proxy di APT"
    cat > /etc/apt/apt.conf.d/proxy.conf << EOF
Acquire::http::Proxy "$var_proxy";
Acquire::https::Proxy "$var_proxy";
EOF
    msg -bar
  else
    msg -garis "* Setting file environment untuk semua user"
    msg -garis "* Jika ingin menghidupkan proxy pada APT"
    msg -ama "sudo proxy on"
    msg -bar

  fi
  # cek status proxy kembali
  proxy status
  echo $http_proxy

# Mengecek Status Proxy
elif [[ $1 == "status" ]]; then
  if [[ $(isUrl $http_proxy) -eq 0 ]]; then
    cek=0
  elif [[ $(isUrl $https_proxy) -eq 0 ]]; then
    cek=0
  else
    cek=1
  fi

  if [[ cek -eq 0  ]]; then
    msg -ama "PROXY Aktif!"
    msg -ama "http => $http_proxy"
    msg -ama "https => $https_proxy"
    msg -ama "ftp => $ftp_proxy"
  else
    msg -ama "PROXY Mati!"
  fi

# Mengedit proxy pada system
elif [[ $1 == "edit" ]]; then
  if [[ isRoot -eq 0 ]]; then
    echo $2 >$flproxy
  else
    msg -ama "Gunakan sudo untuk mengedit proxy"
    msg -ama "sudo proxy edit PROTOKOL://IPPROXY:PORT"
  fi

else
  msg -bar
  msg -ama "Tool konfigurasi proxy otomatis"
  msg -bar
  msg -azu "========= Tutorial ========="
  msg -bra "1. Format Input IP Proxy"
  msg -ama "${infoProtokol}"
  msg -bra "2. Edit IP Proxy"
  msg -ama "${infoEditProxy}"
  msg -bra "3. Menghidupkan proxy"
  msg -ama "${infoProxyOn}"
  msg -bra "4. Mematikan proxy"
  msg -ama "${infoProxyOff}"
  msg -bra "5. Melihat proxy mati atau hidup"
  msg -ama "${infoStatus}"
  msg -bra "6. Menghidupkan proxy pada visual code"
  msg -ama "${infoVS}"
  msg -bra "7. Menghidupkan proxy di setting ubuntu (GNOME)"
  msg -ama "${infoSetting}"
  msg -bar
fi
